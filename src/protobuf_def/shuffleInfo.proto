syntax = "proto2";
package ShuffleInfo;

message ReorderInfo {
  // Binary info from ld or ld.gold; reordering range and main offset
  message BinaryInfo {
    optional uint64 rand_obj_offset = 1;  // PLACEHOLDER FOR LINKER
  }

  // Code layout Info (.text) from LLVM
  // Embeded info ([#func|#fixup]/obj, [#bbk|#fixup]/func, objSz/ea, funcSz/ea)
  message LayoutInfo {
    optional uint32 bb_size = 1;          // UPDATE AT LINKTIME WITH OBJ ALIGNMENTs
                                          // All alignments between fn/bbl are included here
    optional uint32 type = 2;             // Represents the end of [BBL|FUN|OBJ]
    optional bool   bb_fallthrough = 3;
    optional uint32 section = 4;     // section identifier for c++ mutiple sections
	  optional uint32 src_type = 5;             // [generalSource(=0) | hasInlineAssembly(=1) | standaloneAssembly(=2)]
    optional string info = 6;
  }

  // Fixup info in ELF from LLVM
  message FixupInfo {
    message FixupTuple {
      optional uint64 offset = 1;         
      optional uint32 type = 2; //0-1base&2-3target->(Out|PC|VALUE|INDEX) 4->isRela 5->is_new_section 6->isJump 7->isRAND 8->isRELOC [16:31]->reloc_type
	  							//0->is_new_section 1->isJump 2->isRAND 3->isRELOC [8:23]->reloc_type
      optional uint64 base_bbl_sym = 3;
      optional uint32 base_section = 4;
      optional uint64 target_bbl_sym = 5;
      optional uint32 target_section = 6;
      optional uint32 section = 7;
	    optional int64  add = 8;
      optional uint32 step = 9;
      optional string info = 10;
    }
    repeated FixupTuple text = 1;
    repeated FixupTuple rodata = 2;
    repeated FixupTuple data = 3;
    repeated FixupTuple datarel = 4;
    repeated FixupTuple initarray = 5;
    repeated FixupTuple got = 6;
    repeated FixupTuple init = 7;
    repeated FixupTuple fini = 8;
  }
  
  optional BinaryInfo bin = 1;
  repeated LayoutInfo layout = 2;
  repeated FixupInfo fixup = 3;
}